import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

from google.colab import files
uploaded=files.upload()

def kernel(data, point, xmat, k):
    m, n = np.shape(xmat)
    weights = np.mat(np.eye((m)))
    for j in range(m):
        diff = point - data[j]
        print("Point",point)
        print("Diff",diff)
        weights[j, j] = np.exp(diff * diff.T / (-2.0 * k ** 2))
        print("Weights",weights)
    return weights


def local_weight(data, point, xmat, ymat, k):
    wei = kernel(data, point, xmat, k)
    W= (data.T * (wei * data)).I * (data.T * (wei * ymat.T))
    print("W",W)
    return W
 
 
 def local_weight_regression(xmat, ymat, k):
    m, n = np.shape(xmat)
    ypred = np.zeros(m)
    for i in range(m):
        ypred[i] = xmat[i] * local_weight(xmat, xmat[i], xmat, ymat, k)
    return ypred
    
data = pd.read_csv('bill tip.csv')
bill = np.array(data.total_bill)
tip = np.array(data.tip)

mbill= np.mat(bill)
print("MBILL",mbill)
mtip = np.mat(tip)
print("MTIP",mtip)


o/p
MBILL [[16.99 10.34 21.01 23.68 24.59 25.29  8.77 26.88 15.04]]
MTIP [[1.01 1.66 3.5  3.31 3.61 4.71 2.   3.12 1.96]]

m=np.shape(mbill)[1]
one=np.mat(np.ones(m))
X=np.hstack((one.T,mbill.T))
print("X",X)

o/p
X [[ 1.   16.99]
 [ 1.   10.34]
 [ 1.   21.01]
 [ 1.   23.68]
 [ 1.   24.59]
 [ 1.   25.29]
 [ 1.    8.77]
 [ 1.   26.88]
 [ 1.   15.04]]
 
ypred = local_weight_regression(X, mtip, 2)
SortIndex = X[:,1].argsort(0)
xsort = X[SortIndex][:,0]

Point [[ 1.   16.99]]
Diff [[0. 0.]]
Weights [[1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1.]]


fig = plt.figure()
ax = fig.add_subplot(1,1,1)
ax.scatter(bill, tip, color='blue')
ax.plot(xsort[:,1],ypred[SortIndex], color = 'red', linewidth=5)
plt.xlabel('Total bill')
plt.ylabel('Tip')

graph output

Text(0, 0.5, 'Tip')
    
  
